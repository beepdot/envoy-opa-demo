apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: headerecho-envoy
  name: headerecho-envoy
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: headerecho-envoy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: headerecho-envoy
    spec:
      containers:
      - image: rjshrjndrn/headerecho:v3
        imagePullPolicy: IfNotPresent
        name: headerecho
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - args:
        - envoy
        - --config-path
        - /config/envoy-headerecho-envoy.yaml
        env:
        - name: ENVOY_UID
          value: "1111"
        image: envoyproxy/envoy:v1.17.0
        imagePullPolicy: IfNotPresent
        name: envoy
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /config
          name: proxy-config
          readOnly: true
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - -p
        - "8888"
        - -u
        - "1111"
        - -w
        - "8282"
        image: openpolicyagent/proxy_init:v5
        imagePullPolicy: IfNotPresent
        name: proxy-init
        resources: {}
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
          runAsNonRoot: false
          runAsUser: 0
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: headerecho-envoy-proxy-config
        name: proxy-config
