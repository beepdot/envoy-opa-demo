apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "3"
  creationTimestamp: "2021-06-20T15:31:28Z"
  generation: 3
  labels:
    app: postgres
  name: postgres
  namespace: default
  resourceVersion: "7126"
  selfLink: /apis/apps/v1/namespaces/default/deployments/postgres
  uid: 020b3a78-6901-462e-9817-56db112f5914
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: postgres
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: postgres
    spec:
      containers:
      - env:
        - name: POSTGRES_PASSWORD
          value: password
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        image: postgres
        imagePullPolicy: Always
        name: postgres
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: postgres-pv
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: postgres-pv
        persistentVolumeClaim:
          claimName: postgres-pv-claim
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2021-06-20T15:34:57Z"
    lastUpdateTime: "2021-06-20T15:34:57Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2021-06-20T15:31:28Z"
    lastUpdateTime: "2021-06-20T15:40:18Z"
    message: ReplicaSet "postgres-68587f8895" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 3
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
